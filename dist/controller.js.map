{"version":3,"sources":["../src/controller.js"],"names":["MetricsPanelCtrl","_","kbn","echarts","Controller","$scope","$injector","$rootScope","optionDefaults","pieType","legend","show","values","links","datasource","maxDataPoints","interval","targets","cacheTimeout","nullPointMode","legendType","aliasColors","format","valueName","strokeWidth","fontSize","combine","threshold","label","console","dir","panel","defaults","events","on","onRender","bind","onDataReceived","onDataError","onInitEditMode","info","trace","dataList","log","data","xAxis","seriesData","rows","forEach","kills","killer","push","render","addEditorTab","unitFormats","getUnitFormats","scope","elem","attrs","ctrl","renderHandler","dom","find","myChart","incrementRenderCounter","setElementHeight","init","get","buildChart","renderingCompleted","height","row","isString","parseInt","replace","title","css","e","option","text","tooltip","yAxis","series","name","type","setOption","templateUrl"],"mappings":"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","file":"controller.js","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport echarts from 'echarts';\n\nexport class Controller extends MetricsPanelCtrl {\n    constructor($scope, $injector, $rootScope) {\n        super($scope, $injector);\n        this.$rootScope = $rootScope;\n\n        // 定义默认配置项\n        const optionDefaults = {\n            pieType: 'pie',\n            legend: {\n                show: true, // disable/enable legend\n                values: true\n            },\n            links: [],\n            datasource: null,\n            maxDataPoints: 3,\n            interval: null,\n            targets: [{}],\n            cacheTimeout: null,\n            nullPointMode: 'connected',\n            legendType: 'Under graph',\n            aliasColors: {},\n            format: 'short',\n            valueName: 'current',\n            strokeWidth: 1,\n            fontSize: '80%',\n            combine: {\n                threshold: 0.0,\n                label: 'Others'\n            }\n        };\n\n        console.dir(this.panel);\n        _.defaults(this.panel, optionDefaults);\n        _.defaults(this.panel.legend, optionDefaults.legend);\n\n        this.events.on('render', this.onRender.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('data-error', this.onDataError.bind(this));\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    }\n\n    onRender() {\n        console.info('onRender trigger')\n        console.trace();\n    }\n\n    onDataReceived(dataList) {\n        console.info('onDataReceived trigger')\n        console.trace();\n\n        console.log('didi--------------')\n        const [ data ] = dataList;\n        console.dir(data);\n        this.xAxis = [];\n        this.seriesData = [];\n\n        if (data) {\n            data.rows.forEach(([kills, killer]) => {\n                this.seriesData.push(kills);\n                this.xAxis.push(killer);\n            });\n        }\n\n        this.render();\n    }\n\n    onDataError() {\n        console.info('onDataError trigger')\n        console.trace();\n\n        this.data.xAxis = [];\n        this.data.seriesData = [];\n        this.render(); // 渲染界面\n    }\n\n    onInitEditMode() {\n        console.info('onInitEditMode trigger')\n        console.trace();\n\n        this.addEditorTab('Options', 'public/plugins/practice-panel/partials/module.editor.html', 2);\n        this.unitFormats = kbn.getUnitFormats();\n    }\n\n    link(scope, elem, attrs, ctrl) {\n        console.info('link trigger')\n        console.trace();\n\n        ctrl.events.on('render', () => {\n            renderHandler(false);\n        });\n\n        let dom = elem.find('.practice-panel'), // DOM\n            panel, // 配置\n            myChart; // echarts实例\n\n        function renderHandler(incrementRenderCounter) {\n            if (!ctrl.xAxis || !ctrl.seriesData) { return; }\n\n            panel = ctrl.panel;\n\n            if (setElementHeight()) {\n                if (!myChart)\n                    myChart = echarts.init(dom.get(0));\n\n                buildChart();\n            } \n\n            if (incrementRenderCounter){\n                ctrl.renderingCompleted();\n            }\n        }\n\n        function setElementHeight() {\n            try {\n                let height = ctrl.height || panel.height || ctrl.row.height;\n                if (_.isString(height)) {\n                    height = parseInt(height.replace('px', ''), 10);\n                }\n\n                height -= 5; // padding\n                height -= panel.title ? 24 : 9; // subtract panel title bar\n\n                dom.css('height', height + 'px');\n\n                return true;\n            } catch(e) { // IE throws errors sometimes\n                return false;\n            }\n        }\n\n        function buildChart() {\n            const { xAxis, seriesData } = ctrl;\n            // 指定图表的配置项和数据\n            const option = {\n                title: {\n                    text: 'ECharts 入门示例'\n                },\n                tooltip: {},\n                legend: {\n                    data:['击杀']\n                },\n                xAxis: {\n                    data: [...xAxis]\n                },\n                yAxis: {},\n                series: [{\n                    name: '击杀',\n                    type: 'bar',\n                    data: [...seriesData]\n                }]\n            };\n\n            // 使用刚指定的配置项和数据显示图表。\n            myChart.setOption(option);     \n        }\n    }\n\n}\n\nController.templateUrl = './partials/module.html';\n"]}